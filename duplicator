#!/bin/bash

# Tool to make multiple duplicates of a distro sks installation.
# The copies will share a dump, reducing the disk requirements iff the
# original was initialised using 'fastbuild'. 
#
# We assume systemd.

: "${SKS_CONF_DIR=/etc/sks}"
: "${SKS_DATA_DIR=/var/lib/sks}"
: "${SYSTEMD_UNIT_DIR=/lib/systemd/system}"
: "${SYSTEMD_CONF_DIR=/etc/systemd/system}"
: "${SKS_DAEMON_USER=debian-sks}"
: "${SKS_EXTRA_COPIES=2}"

# use cicada method of minimising sync clashes
CICADA_INTERVALS=(1 2 3 5 7 11 13 17)

# shut down main service
systemctl stop sks

# reconfigure main service
perl -ni.bak -e "
  next if /^nodename/;
  next if /^hkp_address/;
  next if /^hkp_port/;
  next if /^recon_address/;
  next if /^recon_port/;
  next if /^gossip_interval/;
  next if /^stat_hour/;
  next if /^use_port_80/;
  print;
" "$SKS_CONF_DIR/sksconf"
cat <<EOF >> "$SKS_CONF_DIR/sksconf"

# Added by script
nodename: sks-0
recon_address: 0.0.0.0
recon_port: 11370
hkp_address: 127.0.0.1
hkp_port: 11371
gossip_interval: 5
stat_hour: 0
EOF

# add main node to internal membership
echo "127.0.0.1 11370 # sks-0" > "$SKS_CONF_DIR/membership.internal"

# enable search into dump dir
chmod og+x "$SKS_DATA_DIR"

for i in $(seq 1 $SKS_EXTRA_COPIES); do
  basedir="${SKS_DATA_DIR}-$i"
  nodename="sks-$i"
  recon_port=$(( 20370 + i * 1000 ))
  hkp_port=$(( 20371 + i * 1000 ))
  daemon_user="${SKS_DAEMON_USER}-$i"

  # create directory structure
  mkdir -p "$basedir$SKS_CONF_DIR"
  mkdir -p "$basedir$SKS_DATA_DIR"
  mkdir -p "$basedir/var/spool/sks"
  mkdir -p "$basedir/var/run"
  ln -s "/var/run/sks-$i" "$basedir/var/run/sks"

  # clone datadir but soft link dump (read-only)
  rsync -a --exclude dump "$SKS_DATA_DIR/" "$basedir$SKS_DATA_DIR"
  ln -s "${SKS_DATA_DIR}/dump" "$basedir$SKS_DATA_DIR/"

  # set permissions
  addgroup --system $daemon_user
  adduser --system $daemon_user
  adduser $daemon_user $daemon_user
  chown -R "$daemon_user:$daemon_user" "$basedir$SKS_DATA_DIR"
  chown -R "$daemon_user:$daemon_user" "$basedir/var/spool/sks"

  # copy and edit configuration
  ln -s "$SKS_CONF_DIR/membership.internal" "$basedir$SKS_CONF_DIR/membership"
  < "$SKS_CONF_DIR/sksconf" > "$basedir$SKS_CONF_DIR/sksconf" perl -ne "
    next if /^nodename/;
    next if /^recon_address/;
    next if /^recon_port/;
    next if /^hkp_address/;
    next if /^hkp_port/;
    next if /^gossip_interval/;
    next if /^stat_hour/;
    next if /^use_port_80/;
    print;
  "
  cat <<EOF >> "$basedir$SKS_CONF_DIR/sksconf"
nodename: $nodename
recon_address: 0.0.0.0
recon_port: $recon_port
hkp_address: 127.0.0.1 ::1
hkp_port: $hkp_port
gossip_interval: 1
stat_hour: $i
EOF

  # add self to membership files
  echo "127.0.0.1 $recon_port # $nodename" >> "$SKS_CONF_DIR/membership"
  echo "127.0.0.1 $recon_port # $nodename" >> "$SKS_CONF_DIR/membership.internal"

  # clone services
  < "$SYSTEMD_UNIT_DIR/sks-recon.service" > "$SYSTEMD_CONF_DIR/sks-recon-$i.service" perl -pe "
    s,sks\.service,sks-$i.service,;
    s,$SKS_DATA_DIR,$basedir$SKS_DATA_DIR,;
    s,(RuntimeDirectory=.*),\1-$i,;
    s,(User=.*),User=$daemon_user,;
    s,(ExecStart=/usr/sbin/sks),\1 -basedir $basedir,;
  "
  < "$SYSTEMD_UNIT_DIR/sks.service" > "$SYSTEMD_CONF_DIR/sks-$i.service" perl -pe "
    s,sks-recon\.service,sks-recon-$i.service,;
    s,$SKS_DATA_DIR,$basedir$SKS_DATA_DIR,;
    s,(RuntimeDirectory=.*),\1-$i,;
    s,(User=.*),User=$daemon_user,;
    s,(ExecStart=/usr/sbin/sks),\1 -basedir $basedir,;
  "
  
  systemctl enable sks-$i
  systemctl start sks-$i
done

# start main service
systemctl start sks

echo "Now reconfigure your webserver to forward port 80,443 queries to localhost 21371,22371"
